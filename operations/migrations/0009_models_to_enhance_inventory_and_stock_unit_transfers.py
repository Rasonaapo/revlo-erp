# Generated by Django 5.1.1 on 2025-02-03 15:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('operations', '0008_product_units_added'),
    ]

    operations = [
        migrations.CreateModel(
            name='StockUnitConversion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_quantity', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='From Quantity')),
                ('to_quantity', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='To Quantity')),
                ('converted_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UnitConversion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversion_factor', models.DecimalField(decimal_places=3, max_digits=10)),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='base_unit',
            field=models.ForeignKey(blank=True, help_text='Smallest unit for divisible products (e.g. cup for sugar)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='products', to='operations.unittype', verbose_name='Base Unit'),
        ),
        migrations.AddField(
            model_name='product',
            name='is_divisible',
            field=models.BooleanField(default=False, help_text='Can be sold in custom measured quantities (e.g. sugar by cups)', verbose_name='Is Divisible'),
        ),
        migrations.AddField(
            model_name='unittype',
            name='conversion_rate',
            field=models.DecimalField(decimal_places=3, default=1.0, help_text='Conversion rate to base unit (e.g. 1 olonka = 6 cups)', max_digits=10, verbose_name='Conversion Rate'),
        ),
        migrations.AddField(
            model_name='unittype',
            name='is_custom_measure',
            field=models.BooleanField(default=False, help_text='Can be used for custom measurements', verbose_name='Is Custom Measure'),
        ),
        migrations.AlterField(
            model_name='product',
            name='is_composite',
            field=models.BooleanField(default=False, help_text='Whether product can be broken down into smaller units', verbose_name='Is Composite'),
        ),
        migrations.AlterField(
            model_name='productunit',
            name='cost_price',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost Price'),
        ),
        migrations.AlterField(
            model_name='productunit',
            name='is_purchasable',
            field=models.BooleanField(default=True, help_text='Can be purchased from supplier', verbose_name='Is Purchasable'),
        ),
        migrations.AlterField(
            model_name='productunit',
            name='is_sellable',
            field=models.BooleanField(default=True, help_text='Can be sold to customers', verbose_name='Is Sellable'),
        ),
        migrations.AlterField(
            model_name='productunit',
            name='parent_unit',
            field=models.ForeignKey(blank=True, help_text='Next larger unit type', null=True, on_delete=django.db.models.deletion.PROTECT, to='operations.productunit', verbose_name='Parent Unit'),
        ),
        migrations.AlterField(
            model_name='productunit',
            name='sale_price',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Sale Price'),
        ),
        migrations.AddIndex(
            model_name='productunit',
            index=models.Index(fields=['product'], name='operations__product_9b7884_idx'),
        ),
        migrations.AddIndex(
            model_name='productunit',
            index=models.Index(fields=['unit_type'], name='operations__unit_ty_97ed2c_idx'),
        ),
        migrations.AddIndex(
            model_name='productunit',
            index=models.Index(fields=['product', 'unit_type'], name='operations__product_f5fa30_idx'),
        ),
        migrations.AddField(
            model_name='stockunitconversion',
            name='from_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='conversions_from', to='operations.productunit', verbose_name='From Product Unit'),
        ),
        migrations.AddField(
            model_name='stockunitconversion',
            name='inventory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='operations.inventory'),
        ),
        migrations.AddField(
            model_name='stockunitconversion',
            name='to_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='conversions_to', to='operations.productunit', verbose_name='To Product Unit'),
        ),
        migrations.AddField(
            model_name='unitconversion',
            name='from_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='conversions_from', to='operations.unittype', verbose_name='From Product Unit'),
        ),
        migrations.AddField(
            model_name='unitconversion',
            name='to_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='conversions_to', to='operations.unittype', verbose_name='To Product Unit'),
        ),
        migrations.AlterUniqueTogether(
            name='unitconversion',
            unique_together={('from_unit', 'to_unit')},
        ),
    ]
