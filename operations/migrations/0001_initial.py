# Generated by Django 5.1.1 on 2024-12-21 17:32

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hr', '0086_meeting_model_relocated'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, unique=True, verbose_name='Company Name')),
                ('tax_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tax Identification Number')),
                ('contact_person', models.CharField(max_length=255, verbose_name='Contact Person')),
                ('contact_position', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_phone', models.CharField(max_length=20, verbose_name='Phone Number')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='Email Address')),
                ('company_phone', models.CharField(max_length=20, verbose_name='Company Phone')),
                ('company_email', models.EmailField(max_length=254, verbose_name='Company Email')),
                ('website', models.URLField(blank=True, null=True)),
                ('address', models.TextField(help_text='Digital address of the customer or Post Address')),
                ('city', models.CharField(max_length=100)),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0, help_text='Credit limit for the customer', max_digits=10, verbose_name='Credit Limit')),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_terms', models.PositiveIntegerField(default=30, help_text='Payment terms in days', verbose_name='Payment Terms')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_stock_level', models.PositiveIntegerField(verbose_name='Minimum Stock Level')),
                ('max_stock_level', models.PositiveIntegerField(verbose_name='Maximum Stock Level')),
                ('reorder_level', models.PositiveIntegerField(verbose_name='Reorder Level')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Available Quantity')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255, unique=True, verbose_name='Product Name')),
                ('barcode', models.CharField(max_length=255, null=True, unique=True)),
                ('description', models.TextField(null=True)),
                ('variant', models.CharField(blank=True, max_length=120, null=True, verbose_name='Product Variant')),
                ('brand', models.CharField(blank=True, help_text='Brand or Manufacturer of the product', max_length=120, null=True, verbose_name='Brand')),
                ('weight', models.FloatField(blank=True, null=True, verbose_name='Weight (kg)')),
                ('cost_price', models.DecimalField(decimal_places=2, help_text='Cost price per unit', max_digits=10, verbose_name='Cost Price')),
                ('sale_price', models.DecimalField(decimal_places=2, help_text='Selling price per unit', max_digits=10, verbose_name='Sale Price')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=255, unique=True, verbose_name='Category Name')),
                ('description', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, unique=True, verbose_name='Company Name')),
                ('tax_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tax Identification Number')),
                ('contact_person', models.CharField(max_length=255, verbose_name='Contact Person')),
                ('contact_position', models.CharField(blank=True, max_length=100, null=True, verbose_name='Position')),
                ('contact_phone', models.PositiveIntegerField(verbose_name='Phone Number')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('company_phone', models.CharField(max_length=20, verbose_name='Company Phone')),
                ('company_email', models.EmailField(max_length=254, verbose_name='Company Email')),
                ('website', models.URLField(blank=True, null=True)),
                ('address', models.TextField(help_text='Digital address of the supplier or Post Address')),
                ('city', models.CharField(max_length=100, null=True, verbose_name='City')),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_terms', models.PositiveIntegerField(default=30, help_text='Payment terms in days')),
                ('lead_time', models.PositiveIntegerField(help_text='Average lead time in days')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryDamage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Damaged Quantity')),
                ('reason', models.CharField(choices=[('expired', 'Expired'), ('broken', 'Broken/Physical Damage'), ('water', 'Water Damage'), ('temperature', 'Temperature Related'), ('pest', 'Pest Damage'), ('quality', 'Quality Issues'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(help_text='Detailed description of damage')),
                ('date_reported', models.DateField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='damages', to='operations.inventory')),
            ],
            options={
                'ordering': ['-date_reported'],
            },
        ),
        migrations.AddField(
            model_name='inventory',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventories', to='operations.product'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='operations.productcategory', verbose_name='Product Category'),
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_number', models.CharField(max_length=50, unique=True)),
                ('order_date', models.DateField(default=django.utils.timezone.now)),
                ('expected_date', models.DateField(blank=True, null=True)),
                ('received_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('approved', 'Approved'), ('ordered', 'Ordered'), ('partial', 'Partially Received'), ('received', 'Fully Received'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supplier', models.ForeignKey(help_text='Supplier cannot be deleted while having purchase orders', on_delete=django.db.models.deletion.PROTECT, related_name='purchase_orders', to='operations.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='Van',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make', models.CharField(max_length=100, verbose_name='Make')),
                ('model', models.CharField(max_length=100, verbose_name='Model')),
                ('year', models.PositiveIntegerField(verbose_name='Year')),
                ('plate_number', models.CharField(max_length=20, unique=True, verbose_name='Plate Number')),
                ('vin', models.CharField(max_length=17, unique=True, verbose_name='VIN')),
                ('capacity_weight', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Capacity (kg)')),
                ('cargo_length', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Cargo Length (m)')),
                ('cargo_width', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Cargo Width (m)')),
                ('cargo_height', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Cargo Height (m)')),
                ('status', models.CharField(choices=[('active', 'Active'), ('maintenance', 'Under Maintenance'), ('repair', 'Under Repair'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('current_mileage', models.PositiveIntegerField(verbose_name='Current Mileage')),
                ('registration_expiry', models.DateField(verbose_name='Registration Expiry Date')),
                ('insurance_expiry', models.DateField(verbose_name='Insurance Expiry Date')),
                ('next_maintenance', models.DateField(blank=True, null=True, verbose_name='Next Maintenance Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_vans', to='hr.employee')),
            ],
            options={
                'verbose_name': 'Van',
                'verbose_name_plural': 'Vans',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VanMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_date', models.DateField(verbose_name='Maintenance Date')),
                ('maintenance_type', models.CharField(choices=[('routine', 'Routine Service'), ('repair', 'Repair'), ('inspection', 'Inspection'), ('emergency', 'Emergency Repair')], max_length=20)),
                ('description', models.TextField(verbose_name='Maintenance Description')),
                ('mileage_at_service', models.PositiveIntegerField(blank=True, null=True, verbose_name='Mileage at Service')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Maintenance Cost')),
                ('service_provider', models.CharField(max_length=255, verbose_name='Service Provider')),
                ('next_service_date', models.DateField(blank=True, null=True, verbose_name='Next Service Date')),
                ('notes', models.TextField(blank=True, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('van', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='operations.van')),
            ],
            options={
                'ordering': ['-maintenance_date'],
            },
        ),
        migrations.AddField(
            model_name='van',
            name='last_maintenance',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='operations.vanmaintenance', verbose_name='Last Maintenance'),
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warehouse_name', models.CharField(max_length=255, unique=True, verbose_name='Warehouse Name')),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('street', models.CharField(max_length=120, null=True)),
                ('city', models.CharField(max_length=64, null=True)),
                ('address', models.CharField(help_text='Can also be Digital or Postal code', max_length=255, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('open_time', models.TimeField(verbose_name='Opening Time')),
                ('close_time', models.TimeField(verbose_name='Closing Time')),
                ('operating_days', models.PositiveIntegerField(verbose_name='Number of Operating Days')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Under Maintenance'), ('closed', 'Temporarily Closed')], default='active', max_length=20)),
                ('total_capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Total Capacity (m³)')),
                ('storage_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Storage Area (m²)')),
                ('number_of_docks', models.PositiveIntegerField(default=1, verbose_name='Number of Loading Docks')),
                ('temperature_controlled', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='warehouses', to='hr.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Transfer Quantity')),
                ('transfer_date', models.DateField(verbose_name='Transfer Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to='operations.product')),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destination_warehouses', to='operations.warehouse', verbose_name='Destination Warehouse')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_warehouses', to='operations.warehouse', verbose_name='Source Warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrderDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_ordered', models.PositiveIntegerField(verbose_name='Ordered Quantity')),
                ('quantity_received', models.PositiveIntegerField(default=0, verbose_name='Received Quantity')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_order_items', to='operations.product')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='operations.purchaseorder')),
                ('warehouse', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='received_items', to='operations.warehouse')),
            ],
        ),
        migrations.AddField(
            model_name='inventory',
            name='warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventories', to='operations.warehouse'),
        ),
        migrations.AlterUniqueTogether(
            name='inventory',
            unique_together={('warehouse', 'product')},
        ),
    ]
